{"version":3,"sources":["tcimg.png","App.js","serviceWorker.js","index.js","icon.ico","ToU_PP_OPUS.pdf"],"names":["module","exports","ipcRenderer","window","require","VIDPATHS","pdfjs","GlobalWorkerOptions","workerSrc","theme","createMuiTheme","palette","primary","main","secondary","App","props","onChangeHandler","event","console","log","target","files","i","len","length","videoFilePath","URL","createObjectURL","newTile","title","name","source","path","setState","previousState","tiles","push","onSubmit","e","preventDefault","onFolderChange","webkitdirectoy","deleteVid","vidToDelete","vidSource","filter","tile","state","selectedFile","loaded","width","innerWidth","height","innerHeight","progbarOpen","doneOpen","expiredOpen","tcOpen","updateWindowDimensions","bind","openProgBar","closeProgBar","runBackend","openDone","closeDone","closeExpired","openTC","closeTC","this","addEventListener","on","args","removeEventListener","filearray","JSON","stringify","send","number","ThemeProvider","Container","DonePopup","open","onClose","ExpiredPopup","TermsandConditionsPopup","Box","p","src","logo","Typography","variant","component","align","ProgBarPopup","onChange","GridList","cellHeight","cols","spacing","style","map","GridListTile","key","IconButton","disabled","GridListTileBar","titlePosition","background","actionIcon","onClick","fontSize","color","actionPosition","url","controls","Grid","container","direction","justify","alignItems","item","xs","position","Button","bottom","left","right","alignContent","htmlFor","display","id","type","multiple","Component","Dialog","disableBackdropClick","fullWidth","maxWidth","aria-labelledby","DialogTitle","LinearProgress","useState","numPages","setNumPages","overflowX","file","ToU","onLoadSuccess","Array","from","_","page","pageNumber","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2d671f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tcimg.d9c27653.png\";","import React, {Component} from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Document, Page,pdfjs  } from 'react-pdf';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport PropTypes from 'prop-types';\r\nimport { GridList } from '@material-ui/core';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport { spacing } from '@material-ui/system';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport logo from './icon.ico';\r\nimport tcimg from './tcimg.png';\r\nimport ReactPlayer from 'react-player';\r\nimport './App.css';\r\nimport ToU from './ToU_PP_OPUS.pdf';\r\nconst electron = window.require('electron');\r\nconst { ipcRenderer } = electron;\r\nvar VIDPATHS = [];\r\nconst fs = window.require('fs');\r\npdfjs.GlobalWorkerOptions.workerSrc = `./pdf.worker.js`;\r\n\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#ffb74d',\r\n    },\r\n    secondary: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nclass App extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        selectedFile: null,\r\n        loaded:0,\r\n        tiles: [],\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        progbarOpen: false,\r\n        doneOpen: false,\r\n        expiredOpen: false,\r\n        tcOpen: true\r\n      }\r\n   this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n   this.openProgBar = this.openProgBar.bind(this);\r\n   this.closeProgBar = this.closeProgBar.bind(this);\r\n   this.runBackend = this.runBackend.bind(this);\r\n   this.openDone = this.openDone.bind(this);\r\n   this.closeDone = this.closeDone.bind(this);\r\n   this.closeExpired = this.closeExpired.bind(this);\r\n   this.openTC = this.openTC.bind(this);\r\n   this.closeTC = this.closeTC.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    //terms of use open only first time - not working\r\n    /*let that = this;\r\n    fs.readFile('hasbeenopened.txt', function(err, data) {\r\n      if (err != null &&  err.code == 'ENOENT') {\r\n        // the file doesn't exist\r\n        console.log('first time opening app');\r\n        that.openTC();\r\n        fs.writeFile('hasbeenopened.txt', 'App opened', function (err) {\r\n          if (err) throw err;\r\n          console.log('Saved!');\r\n        });\r\n      }\r\n      else{\r\n        console.log('not first time');\r\n      }\r\n      // the file exists if there are no other errors\r\n    });*/\r\n    this.openTC();\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n    // setting up an event listener to read data that background process\r\n    // will send via the main process after processing the data we\r\n    // send from visiable renderer process\r\n    ipcRenderer.on('MESSAGE_FROM_BACKGROUND_VIA_MAIN', (event, args) => {\r\n      console.log(args);\r\n      // var len = args.length-3;\r\n      // var i;\r\n      // for(i = 0; i < len; i++){\r\n      //   if(args[i] + args[i+1] + args[i+2] + args[i+3] == 'DONE'){\r\n      //     this.closeProgBar();\r\n      //     this.openDone();\r\n      //   }\r\n      //   else if(args[i] + args[i+1] + args[i+2] + args[i+3] == 'EXPI'){\r\n      //     this.closeProgBar();\r\n      //     this.setState({expiredOpen: true});\r\n      //   }\r\n      // }\r\n      this.closeProgBar();\r\n      this.openDone();\r\n    });\r\n    // trigger event to start background process\r\n    // can be triggered pretty much from anywhere after\r\n    // you have set up a listener to get the information\r\n    // back from background process, as I have done in line 13\r\n  }\r\n\r\n  openTC(){\r\n    this.setState({tcOpen: true});\r\n  }\r\n\r\n  closeTC(){\r\n    this.setState({tcOpen: false});\r\n  }\r\n\r\n  openProgBar() {\r\n    this.setState({progbarOpen: true});\r\n  }\r\n\r\n  closeProgBar() {\r\n    this.setState({progbarOpen: false});\r\n  }\r\n\r\n  openDone(){\r\n    this.setState({doneOpen: true});\r\n  }\r\n\r\n  closeDone(){\r\n    this.setState({doneOpen: false});\r\n  }\r\n\r\n  closeExpired(){\r\n    this.setState({expiredOpen: false});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  onChangeHandler=event=>{\r\n\r\n    console.log(event.target.files);\r\n    var len = event.target.files.length;\r\n    var i;\r\n    for(i = 0; i < len; i++){\r\n      let videoFilePath = URL.createObjectURL(event.target.files[i]);\r\n      let newTile = {title: event.target.files[i].name, source: videoFilePath, path: event.target.files[i].path};\r\n      this.setState(previousState => ({\r\n        tiles: [...previousState.tiles, newTile]\r\n      }));\r\n      VIDPATHS.push(event.target.files[i].path);\r\n    }\r\n    console.log(VIDPATHS);\r\n    //tileData.push({title: event.target.files[0].name, source: event.target.files[0].path});\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n  }\r\n\r\n  onFolderChange=event=>{\r\n    console.log(event.target.files[0].webkitdirectoy);\r\n  }\r\n\r\n  deleteVid = (vidToDelete, vidSource) => {\r\n    console.log(vidToDelete)\r\n    console.log(vidSource)\r\n    this.setState(previousState => ({\r\n      tiles: [\r\n        ...previousState.tiles.filter(tile => tile.title !== vidToDelete)\r\n      ]\r\n    }));\r\n    VIDPATHS = VIDPATHS.filter(path => path !== vidSource);\r\n    console.log(this.state.tiles);\r\n    console.log(VIDPATHS);\r\n  }\r\n\r\n  runBackend() {\r\n    if(VIDPATHS.length != 0){\r\n      this.openProgBar();\r\n      var filearray = JSON.stringify(VIDPATHS);\r\n      console.log(filearray);\r\n      ipcRenderer.send('START_BACKGROUND_VIA_MAIN', {\r\n        number: filearray\r\n        });\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n      <Container>\r\n      <DonePopup open={this.state.doneOpen} onClose={this.closeDone}/>\r\n      <ExpiredPopup open={this.state.expiredOpen} onClose={this.closeExpired}/>\r\n      <TermsandConditionsPopup open={this.state.tcOpen} onClose={this.closeTC}/>\r\n        <Box p={1}>\r\n          <img src={logo} width='7%'height='7%'></img>\r\n          <Typography variant=\"h5\" component=\"h3\" align='center'>\r\n            Welcome to OPUS!\r\n          </Typography>\r\n        </Box>\r\n        <ProgBarPopup open={this.state.progbarOpen} onClose={this.closeProgBar} runBackend={this.runBackend} onChange={this.onFolderChange}\r\n        onSubmit={this.onSubmit}/>\r\n        <GridList cellHeight='auto' cols={3} spacing={10} style={{height:this.state.height*0.73}}>\r\n          {this.state.tiles.map((tile) => (\r\n            <GridListTile key={tile.title}> \r\n            <IconButton disabled={true}></IconButton>\r\n            <GridListTileBar\r\n              title={tile.title}\r\n              titlePosition=\"top\"\r\n              style={{background:'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n              'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'}}\r\n              actionIcon={<div>\r\n                <IconButton onClick={() => this.deleteVid(tile.title, tile.path)}><HighlightOffIcon fontSize=\"default\" color=\"secondary\" /></IconButton>\r\n                </div>}\r\n              actionPosition = \"right\"\r\n              />\r\n              <ReactPlayer width={280} height={180} url={tile.source} controls></ReactPlayer>\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\" spacing={6}>\r\n          <Grid item xs={6}  position='fixed'>\r\n            <Button style={{ bottom: 3, left: 3 }}color='primary' variant='contained' onClick={this.runBackend}>Create Ensemble!</Button>\r\n          </Grid>\r\n          <Grid item xs={3} right={1} alignContent='flex-end' > \r\n          <label htmlFor=\"upload-video\">\r\n            <input\r\n              style={{ display: 'none' }}\r\n              id=\"upload-video\"\r\n              name=\"upload-video\"\r\n              type=\"file\"\r\n              onChange={this.onChangeHandler}\r\n              onSubmit={this.onSubmit}\r\n              multiple\r\n            />\r\n  \r\n            <Button style={{ bottom: 3, right: 0 }} color='primary' variant='contained' component=\"span\"> \r\n              Add Videos\r\n            </Button>\r\n          </label>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n\r\nlet styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden'\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n}\r\n\r\nexport default App;\r\n\r\nfunction ProgBarPopup(props) {\r\n  const { onClose, open} = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog disableBackdropClick={true} fullWidth={true} maxWidth='xs' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle>Creating Ensemble...</DialogTitle>\r\n      <LinearProgress variant='indeterminate'></LinearProgress>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nProgBarPopup.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction DonePopup(props) {\r\n  const { onClose, open} = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog fullWidth={true} maxWidth='xs' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle>Ensemble complete!</DialogTitle>\r\n      <Grid container direction='column' alignItems='center' justify='center' spacing={1}>\r\n        <Grid item>\r\n          <Typography>Check your Desktop folder for the finished product.</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button maxWidth='sm' variant='contained' onClick={onClose}>OK</Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton disabled={true}></IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nDonePopup.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction ExpiredPopup(props) {\r\n  const { onClose, open} = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog fullWidth={true} maxWidth='xs' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle>Error: software is expired.</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nExpiredPopup.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nfunction TermsandConditionsPopup(props) {\r\n  const { onClose, open} = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  // react-pdf\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <Dialog disableBackdropClick={true} fullWidth={true} maxWidth='sm' onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle>Terms and Conditions</DialogTitle>\r\n      <div style={{ overflowX: \"hidden\" }}>\r\n        <Grid container direction='column' alignItems='center' justify='center' spacing={1}>\r\n          <Grid item>\r\n          <div>\r\n          <Document\r\n            file={ToU}\r\n            onLoadSuccess={onDocumentLoadSuccess}\r\n          >\r\n          {Array.from(Array(numPages), (_, i) => i + 1).map(page => (\r\n              <Page pageNumber={page} />\r\n          ))}\r\n          </Document>\r\n        </div>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid container direction='column' alignItems='center' justify='center' spacing={1}>\r\n          <Grid item> \r\n            <Button maxWidth='sm' variant='contained' onClick={onClose}>AGREE</Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      \r\n      \r\n    </Dialog>\r\n  );\r\n}\r\n\r\nTermsandConditionsPopup.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/icon.e963f229.ico\";","module.exports = __webpack_public_path__ + \"static/media/ToU_PP_OPUS.fda56d6d.pdf\";"],"sourceRoot":""}